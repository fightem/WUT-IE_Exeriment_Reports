C51 COMPILER V9.59.0.0   LEDBUZZER                                                         12/02/2022 16:26:28 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE LEDBUZZER
OBJECT MODULE PLACED IN .\Objects\LedBuzzer.obj
COMPILER INVOKED BY: D:\Program Files\Keil\C51\BIN\C51.EXE source\LedBuzzer.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEN
                    -D PRINT(.\Listings\LedBuzzer.lst) TABS(2) OBJECT(.\Objects\LedBuzzer.obj)

line level    source

   1          #define  _LED_BUZZER_C
   2          #include "config.h"
   3          #include "LedBuzzer.h"
   4          
   5          uint8 code LedChar[] = {  //数码管显示字符转换表
   6              0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8,
   7              0x80, 0x90, 0x88, 0x83, 0xC6, 0xA1, 0x86, 0x8E
   8          };
   9          
  10          bit staBuzzer = 0; //蜂鸣器状态控制位，1-鸣叫、0-关闭
  11          struct sLedBuff ledBuff; //LED显示缓冲区，默认初值全0，正好达到上电全亮的效果
  12          
  13          /* LED初始化函数，初始化IO、配置定时器 */
  14          void InitLed()
  15          {
  16   1          //初始化IO口
  17   1          P0 = 0xFF;
  18   1          ENLED = 0;
  19   1          //配置T2作为动态扫描定时
  20   1          T2CON = 0x00;  //配置T2工作在16位自动重载定时器模式
  21   1          RCAP2H = ((65536-SYS_MCLK/1500)>>8);  //配置重载值，每秒产生1500次中断，
  22   1          RCAP2L = (65536-SYS_MCLK/1500);       //以使刷新率达到100Hz无闪烁的效果
  23   1          TH2 = RCAP2H;  //设置初值等于重载值
  24   1          TL2 = RCAP2L;
  25   1          ET2 = 1;       //使能T2中断
  26   1          PT2 = 1;       //设置T2中断为高优先级
  27   1          TR2 = 1;       //启动T2
  28   1      }
  29          /* 流水灯实现函数，间隔调用实现流动效果 */
  30          void FlowingLight()
  31          {
  32   1          static uint8 i = 0;
  33   1          const uint8 code tab[] = {  //流动表
  34   1              0x7F, 0x3F, 0x1F, 0x0F, 0x87, 0xC3, 0xE1, 0xF0, 0xF8, 0xFC, 0xFE, 0xFF
  35   1          };
  36   1          
  37   1          ledBuff.alone = tab[i];   //表中对应值送到独立LED的显示缓冲区
  38   1          if (i < (sizeof(tab)-1))  //索引递增循环，遍历整个流动表
  39   1              i++;
  40   1          else
  41   1              i = 0;
  42   1      }
  43          /* 数码管上显示一位数字，index-数码管位索引(从右到左对应0～5)，
  44          **     num-待显示的数字，point-代表是否显示此位上的小数点 */
  45          void ShowLedNumber(uint8 index, uint8 num, uint8 point)
  46          {
  47   1          ledBuff.number[index] = LedChar[num];  //输入数字转换为数码管字符0～F
  48   1          if (point != 0)
  49   1          {
  50   2              ledBuff.number[index] &= 0x7F;  //point不为0时点亮当前位的小数点
  51   2          }
  52   1      }
  53          /* 点阵上显示一帧图片，ptr-待显示图片指针 */
  54          void ShowLedArray(uint8 *ptr)
C51 COMPILER V9.59.0.0   LEDBUZZER                                                         12/02/2022 16:26:28 PAGE 2   

  55          {
  56   1          uint8 i;
  57   1          
  58   1          for (i=0; i<sizeof(ledBuff.array); i++)
  59   1          {
  60   2              ledBuff.array[i] = *ptr++;
  61   2          }
  62   1      }
  63          /* T2中断服务函数，LED动态扫描、蜂鸣器控制 */
  64          void InterruptTimer2() interrupt 5
  65          {
  66   1          static uint8 i = 0;  //LED位选索引
  67   1          
  68   1          TF2 = 0;  //清零T2中断标志
  69   1          //全部LED动态扫描显示
  70   1          if (ENLED == 0)  //LED使能时才进行动态扫描
  71   1          {
  72   2              P0 = 0xFF;                       //关闭所有段选位，显示消隐
  73   2              P1 = (P1 & 0xF0) | i;            //位选索引值赋值到P1口低4位
  74   2              P0 = *((uint8 data*)&ledBuff+i); //缓冲区中索引位置的数据送到P0口
  75   2              if (i < (sizeof(ledBuff)-1))     //索引递增循环，遍历整个缓冲区
  76   2                  i++;
  77   2              else
  78   2                  i = 0;
  79   2          }
  80   1          //由蜂鸣器状态位控制蜂鸣器
  81   1          if (staBuzzer == 1)
  82   1              BUZZER = ~BUZZER;  //蜂鸣器鸣叫
  83   1          else
  84   1              BUZZER = 1;        //蜂鸣器静音
  85   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    190    ----
   CONSTANT SIZE    =     28    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     17       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
