C51 COMPILER V9.59.0.0   MAIN                                                              12/02/2022 15:34:56 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Program Files\Keil\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Li
                    -stings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          //将模拟输入通道0、1、3的电压值显示到液晶上
   2          
   3          #include <reg52.h>
   4          
   5          bit flag300ms = 1;       //300ms定时标志
   6          unsigned char T0RH = 0;  //T0重载值的高字节
   7          unsigned char T0RL = 0;  //T0重载值的低字节
   8          
   9          void ConfigTimer0(unsigned int ms);
  10          unsigned char GetADCValue(unsigned char chn);
  11          void ValueToString(unsigned char *str, unsigned char val);
  12          extern void I2CStart();
  13          extern void I2CStop();
  14          extern unsigned char I2CReadACK();
  15          extern unsigned char I2CReadNAK();
  16          extern bit I2CWrite(unsigned char dat);
  17          extern void InitLcd1602();
  18          extern void LcdShowStr(unsigned char x, unsigned char y, unsigned char *str);
  19          
  20          void main()
  21          {
  22   1          unsigned char val;
  23   1          unsigned char str[10];
  24   1          
  25   1          EA = 1;            //开总中断
  26   1          ConfigTimer0(10);  //配置T0定时10ms
  27   1          InitLcd1602();     //初始化液晶    
  28   1          LcdShowStr(0, 0, "AIN0  AIN1  AIN3");  //显示通道指示
  29   1          while (1)
  30   1          {
  31   2              if (flag300ms)
  32   2              {
  33   3                  flag300ms = 0;
  34   3                  //显示通道0的电压
  35   3                  val = GetADCValue(0);     //获取ADC通道0的转换值
  36   3                  ValueToString(str, val);  //转为字符串格式的电压值
  37   3                  LcdShowStr(0, 1, str);    //显示到液晶上
  38   3                  //显示通道1的电压
  39   3                  val = GetADCValue(1);
  40   3                  ValueToString(str, val);
  41   3                  LcdShowStr(6, 1, str);
  42   3                  //显示通道3的电压
  43   3                  val = GetADCValue(3);
  44   3                  ValueToString(str, val);
  45   3                  LcdShowStr(12, 1, str);
  46   3              }
  47   2          }
  48   1      }
  49          /* 读取当前的ADC转换值，chn-ADC通道号0~3 */
  50          unsigned char GetADCValue(unsigned char chn)
  51          {
  52   1          unsigned char val;
  53   1          
  54   1          I2CStart();
C51 COMPILER V9.59.0.0   MAIN                                                              12/02/2022 15:34:56 PAGE 2   

  55   1          if (!I2CWrite(0x48<<1))  //寻址PCF8591，如未应答，则停止操作并返回0
  56   1          {
  57   2              I2CStop();
  58   2              return 0;
  59   2          }
  60   1          I2CWrite(0x40|chn);        //写入控制字节，选择转换通道
  61   1          I2CStart();
  62   1          I2CWrite((0x48<<1)|0x01);  //寻址PCF8591，指定后续为读操作    
  63   1          I2CReadACK();              //先空读一个字节，提供采样转换时间
  64   1          val = I2CReadNAK();        //读取刚刚转换完的值
  65   1          I2CStop();
  66   1          
  67   1          return val;
  68   1      }
  69          /* ADC转换值转为实际电压值的字符串形式，str-字符串指针，val-AD转换值 */
  70          void ValueToString(unsigned char *str, unsigned char val)
  71          {
  72   1          //电压值=转换结果*2.5V/255，式中的25隐含了一位十进制小数
  73   1          val = (val*25) / 255;
  74   1          str[0] = (val/10) + '0';  //整数位字符
  75   1          str[1] = '.';             //小数点
  76   1          str[2] = (val%10) + '0';  //小数位字符
  77   1          str[3] = 'V';             //电压单位
  78   1          str[4] = '\0';            //结束符
  79   1      }
  80          /* 配置并启动T0，ms-T0定时时间 */
  81          void ConfigTimer0(unsigned int ms)
  82          {
  83   1          unsigned long tmp;  //临时变量
  84   1          
  85   1          tmp = 11059200 / 12;      //定时器计数频率
  86   1          tmp = (tmp * ms) / 1000;  //计算所需的计数值
  87   1          tmp = 65536 - tmp;        //计算定时器重载值
  88   1          tmp = tmp + 12;           //补偿中断响应延时造成的误差
  89   1          T0RH = (unsigned char)(tmp>>8);  //定时器重载值拆分为高低字节
  90   1          T0RL = (unsigned char)tmp;
  91   1          TMOD &= 0xF0;   //清零T0的控制位
  92   1          TMOD |= 0x01;   //配置T0为模式1
  93   1          TH0 = T0RH;     //加载T0重载值
  94   1          TL0 = T0RL;
  95   1          ET0 = 1;        //使能T0中断
  96   1          TR0 = 1;        //启动T0
  97   1      }
  98          /* T0中断服务函数，执行300ms定时 */
  99          void InterruptTimer0() interrupt 1
 100          {
 101   1          static unsigned char tmr300ms = 0;
 102   1          
 103   1          TH0 = T0RH;  //重新加载重载值
 104   1          TL0 = T0RL;
 105   1          tmr300ms++;
 106   1          if (tmr300ms >= 30)  //定时300ms
 107   1          {
 108   2              tmr300ms = 0;
 109   2              flag300ms = 1;
 110   2          }
 111   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    383    ----
   CONSTANT SIZE    =     17    ----
C51 COMPILER V9.59.0.0   MAIN                                                              12/02/2022 15:34:56 PAGE 3   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3      20
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
